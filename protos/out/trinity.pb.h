// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: trinity.proto

#ifndef PROTOBUF_trinity_2eproto__INCLUDED
#define PROTOBUF_trinity_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace trinity {
class ConfigRequest;
class ConfigRequestDefaultTypeInternal;
extern ConfigRequestDefaultTypeInternal _ConfigRequest_default_instance_;
class DocStat;
class DocStatDefaultTypeInternal;
extern DocStatDefaultTypeInternal _DocStat_default_instance_;
class FIndexConfig;
class FIndexConfigDefaultTypeInternal;
extern FIndexConfigDefaultTypeInternal _FIndexConfig_default_instance_;
class FMValue;
class FMValueDefaultTypeInternal;
extern FMValueDefaultTypeInternal _FMValue_default_instance_;
class FMapRequest;
class FMapRequestDefaultTypeInternal;
extern FMapRequestDefaultTypeInternal _FMapRequest_default_instance_;
class ForwardMap;
class ForwardMapDefaultTypeInternal;
extern ForwardMapDefaultTypeInternal _ForwardMap_default_instance_;
class ForwardMap_TheMapEntry;
class ForwardMap_TheMapEntryDefaultTypeInternal;
extern ForwardMap_TheMapEntryDefaultTypeInternal _ForwardMap_TheMapEntry_default_instance_;
class IIndexConfig;
class IIndexConfigDefaultTypeInternal;
extern IIndexConfigDefaultTypeInternal _IIndexConfig_default_instance_;
class IMValue;
class IMValueDefaultTypeInternal;
extern IMValueDefaultTypeInternal _IMValue_default_instance_;
class IMapRequest;
class IMapRequestDefaultTypeInternal;
extern IMapRequestDefaultTypeInternal _IMapRequest_default_instance_;
class InvertedMap;
class InvertedMapDefaultTypeInternal;
extern InvertedMapDefaultTypeInternal _InvertedMap_default_instance_;
class InvertedMap_TheMapEntry;
class InvertedMap_TheMapEntryDefaultTypeInternal;
extern InvertedMap_TheMapEntryDefaultTypeInternal _InvertedMap_TheMapEntry_default_instance_;
class RootConfig;
class RootConfigDefaultTypeInternal;
extern RootConfigDefaultTypeInternal _RootConfig_default_instance_;
class SearchRequest;
class SearchRequestDefaultTypeInternal;
extern SearchRequestDefaultTypeInternal _SearchRequest_default_instance_;
class SearchResponse;
class SearchResponseDefaultTypeInternal;
extern SearchResponseDefaultTypeInternal _SearchResponse_default_instance_;
class SearchResult;
class SearchResultDefaultTypeInternal;
extern SearchResultDefaultTypeInternal _SearchResult_default_instance_;
class SetResult;
class SetResultDefaultTypeInternal;
extern SetResultDefaultTypeInternal _SetResult_default_instance_;
class StartSubsystemRequest;
class StartSubsystemRequestDefaultTypeInternal;
extern StartSubsystemRequestDefaultTypeInternal _StartSubsystemRequest_default_instance_;
class StartSubsystemResponse;
class StartSubsystemResponseDefaultTypeInternal;
extern StartSubsystemResponseDefaultTypeInternal _StartSubsystemResponse_default_instance_;
}  // namespace trinity

namespace trinity {

namespace protobuf_trinity_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_trinity_2eproto

// ===================================================================

class RootConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:trinity.RootConfig) */ {
 public:
  RootConfig();
  virtual ~RootConfig();

  RootConfig(const RootConfig& from);

  inline RootConfig& operator=(const RootConfig& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RootConfig& default_instance();

  static inline const RootConfig* internal_default_instance() {
    return reinterpret_cast<const RootConfig*>(
               &_RootConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(RootConfig* other);

  // implements Message ----------------------------------------------

  inline RootConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  RootConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RootConfig& from);
  void MergeFrom(const RootConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RootConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string NodeRole = 1;
  void clear_noderole();
  static const int kNodeRoleFieldNumber = 1;
  const ::std::string& noderole() const;
  void set_noderole(const ::std::string& value);
  #if LANG_CXX11
  void set_noderole(::std::string&& value);
  #endif
  void set_noderole(const char* value);
  void set_noderole(const char* value, size_t size);
  ::std::string* mutable_noderole();
  ::std::string* release_noderole();
  void set_allocated_noderole(::std::string* noderole);

  // string APIPort = 4;
  void clear_apiport();
  static const int kAPIPortFieldNumber = 4;
  const ::std::string& apiport() const;
  void set_apiport(const ::std::string& value);
  #if LANG_CXX11
  void set_apiport(::std::string&& value);
  #endif
  void set_apiport(const char* value);
  void set_apiport(const char* value, size_t size);
  ::std::string* mutable_apiport();
  ::std::string* release_apiport();
  void set_allocated_apiport(::std::string* apiport);

  // .trinity.FIndexConfig FIndex = 2;
  bool has_findex() const;
  void clear_findex();
  static const int kFIndexFieldNumber = 2;
  const ::trinity::FIndexConfig& findex() const;
  ::trinity::FIndexConfig* mutable_findex();
  ::trinity::FIndexConfig* release_findex();
  void set_allocated_findex(::trinity::FIndexConfig* findex);

  // .trinity.IIndexConfig IIndex = 3;
  bool has_iindex() const;
  void clear_iindex();
  static const int kIIndexFieldNumber = 3;
  const ::trinity::IIndexConfig& iindex() const;
  ::trinity::IIndexConfig* mutable_iindex();
  ::trinity::IIndexConfig* release_iindex();
  void set_allocated_iindex(::trinity::IIndexConfig* iindex);

  // @@protoc_insertion_point(class_scope:trinity.RootConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr noderole_;
  ::google::protobuf::internal::ArenaStringPtr apiport_;
  ::trinity::FIndexConfig* findex_;
  ::trinity::IIndexConfig* iindex_;
  mutable int _cached_size_;
  friend struct protobuf_trinity_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FIndexConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:trinity.FIndexConfig) */ {
 public:
  FIndexConfig();
  virtual ~FIndexConfig();

  FIndexConfig(const FIndexConfig& from);

  inline FIndexConfig& operator=(const FIndexConfig& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FIndexConfig& default_instance();

  static inline const FIndexConfig* internal_default_instance() {
    return reinterpret_cast<const FIndexConfig*>(
               &_FIndexConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(FIndexConfig* other);

  // implements Message ----------------------------------------------

  inline FIndexConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  FIndexConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FIndexConfig& from);
  void MergeFrom(const FIndexConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FIndexConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string store_path = 2;
  void clear_store_path();
  static const int kStorePathFieldNumber = 2;
  const ::std::string& store_path() const;
  void set_store_path(const ::std::string& value);
  #if LANG_CXX11
  void set_store_path(::std::string&& value);
  #endif
  void set_store_path(const char* value);
  void set_store_path(const char* value, size_t size);
  ::std::string* mutable_store_path();
  ::std::string* release_store_path();
  void set_allocated_store_path(::std::string* store_path);

  // uint32 max_size = 1;
  void clear_max_size();
  static const int kMaxSizeFieldNumber = 1;
  ::google::protobuf::uint32 max_size() const;
  void set_max_size(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:trinity.FIndexConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr store_path_;
  ::google::protobuf::uint32 max_size_;
  mutable int _cached_size_;
  friend struct protobuf_trinity_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IIndexConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:trinity.IIndexConfig) */ {
 public:
  IIndexConfig();
  virtual ~IIndexConfig();

  IIndexConfig(const IIndexConfig& from);

  inline IIndexConfig& operator=(const IIndexConfig& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IIndexConfig& default_instance();

  static inline const IIndexConfig* internal_default_instance() {
    return reinterpret_cast<const IIndexConfig*>(
               &_IIndexConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(IIndexConfig* other);

  // implements Message ----------------------------------------------

  inline IIndexConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  IIndexConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IIndexConfig& from);
  void MergeFrom(const IIndexConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IIndexConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string store_path = 2;
  void clear_store_path();
  static const int kStorePathFieldNumber = 2;
  const ::std::string& store_path() const;
  void set_store_path(const ::std::string& value);
  #if LANG_CXX11
  void set_store_path(::std::string&& value);
  #endif
  void set_store_path(const char* value);
  void set_store_path(const char* value, size_t size);
  ::std::string* mutable_store_path();
  ::std::string* release_store_path();
  void set_allocated_store_path(::std::string* store_path);

  // uint32 max_size = 1;
  void clear_max_size();
  static const int kMaxSizeFieldNumber = 1;
  ::google::protobuf::uint32 max_size() const;
  void set_max_size(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:trinity.IIndexConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr store_path_;
  ::google::protobuf::uint32 max_size_;
  mutable int _cached_size_;
  friend struct protobuf_trinity_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:trinity.ConfigRequest) */ {
 public:
  ConfigRequest();
  virtual ~ConfigRequest();

  ConfigRequest(const ConfigRequest& from);

  inline ConfigRequest& operator=(const ConfigRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigRequest& default_instance();

  static inline const ConfigRequest* internal_default_instance() {
    return reinterpret_cast<const ConfigRequest*>(
               &_ConfigRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(ConfigRequest* other);

  // implements Message ----------------------------------------------

  inline ConfigRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ConfigRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ConfigRequest& from);
  void MergeFrom(const ConfigRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ConfigRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // @@protoc_insertion_point(class_scope:trinity.ConfigRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  mutable int _cached_size_;
  friend struct protobuf_trinity_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:trinity.SetResult) */ {
 public:
  SetResult();
  virtual ~SetResult();

  SetResult(const SetResult& from);

  inline SetResult& operator=(const SetResult& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetResult& default_instance();

  static inline const SetResult* internal_default_instance() {
    return reinterpret_cast<const SetResult*>(
               &_SetResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(SetResult* other);

  // implements Message ----------------------------------------------

  inline SetResult* New() const PROTOBUF_FINAL { return New(NULL); }

  SetResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetResult& from);
  void MergeFrom(const SetResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool success = 1;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:trinity.SetResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool success_;
  mutable int _cached_size_;
  friend struct protobuf_trinity_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FMValue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:trinity.FMValue) */ {
 public:
  FMValue();
  virtual ~FMValue();

  FMValue(const FMValue& from);

  inline FMValue& operator=(const FMValue& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FMValue& default_instance();

  static inline const FMValue* internal_default_instance() {
    return reinterpret_cast<const FMValue*>(
               &_FMValue_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(FMValue* other);

  // implements Message ----------------------------------------------

  inline FMValue* New() const PROTOBUF_FINAL { return New(NULL); }

  FMValue* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FMValue& from);
  void MergeFrom(const FMValue& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FMValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 locations = 1;
  int locations_size() const;
  void clear_locations();
  static const int kLocationsFieldNumber = 1;
  ::google::protobuf::uint32 locations(int index) const;
  void set_locations(int index, ::google::protobuf::uint32 value);
  void add_locations(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      locations() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_locations();

  // @@protoc_insertion_point(class_scope:trinity.FMValue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > locations_;
  mutable int _locations_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_trinity_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class ForwardMap : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:trinity.ForwardMap) */ {
 public:
  ForwardMap();
  virtual ~ForwardMap();

  ForwardMap(const ForwardMap& from);

  inline ForwardMap& operator=(const ForwardMap& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ForwardMap& default_instance();

  static inline const ForwardMap* internal_default_instance() {
    return reinterpret_cast<const ForwardMap*>(
               &_ForwardMap_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(ForwardMap* other);

  // implements Message ----------------------------------------------

  inline ForwardMap* New() const PROTOBUF_FINAL { return New(NULL); }

  ForwardMap* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ForwardMap& from);
  void MergeFrom(const ForwardMap& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ForwardMap* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .trinity.FMValue> the_map = 3;
  int the_map_size() const;
  void clear_the_map();
  static const int kTheMapFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::trinity::FMValue >&
      the_map() const;
  ::google::protobuf::Map< ::std::string, ::trinity::FMValue >*
      mutable_the_map();

  // string key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // uint32 findex_api_version = 1;
  void clear_findex_api_version();
  static const int kFindexApiVersionFieldNumber = 1;
  ::google::protobuf::uint32 findex_api_version() const;
  void set_findex_api_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:trinity.ForwardMap)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class ForwardMap_TheMapEntry : public ::google::protobuf::internal::MapEntry<ForwardMap_TheMapEntry, 
      ::std::string, ::trinity::FMValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<ForwardMap_TheMapEntry, 
      ::std::string, ::trinity::FMValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    ForwardMap_TheMapEntry();
    ForwardMap_TheMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const ForwardMap_TheMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_ForwardMap_TheMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  ::google::protobuf::internal::MapField<
      ForwardMap_TheMapEntry,
      ::std::string, ::trinity::FMValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > the_map_;
  private:
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::uint32 findex_api_version_;
  mutable int _cached_size_;
  friend struct protobuf_trinity_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DocStat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:trinity.DocStat) */ {
 public:
  DocStat();
  virtual ~DocStat();

  DocStat(const DocStat& from);

  inline DocStat& operator=(const DocStat& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DocStat& default_instance();

  static inline const DocStat* internal_default_instance() {
    return reinterpret_cast<const DocStat*>(
               &_DocStat_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(DocStat* other);

  // implements Message ----------------------------------------------

  inline DocStat* New() const PROTOBUF_FINAL { return New(NULL); }

  DocStat* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DocStat& from);
  void MergeFrom(const DocStat& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DocStat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string docname = 1;
  void clear_docname();
  static const int kDocnameFieldNumber = 1;
  const ::std::string& docname() const;
  void set_docname(const ::std::string& value);
  #if LANG_CXX11
  void set_docname(::std::string&& value);
  #endif
  void set_docname(const char* value);
  void set_docname(const char* value, size_t size);
  ::std::string* mutable_docname();
  ::std::string* release_docname();
  void set_allocated_docname(::std::string* docname);

  // uint32 count = 2;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:trinity.DocStat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr docname_;
  ::google::protobuf::uint32 count_;
  mutable int _cached_size_;
  friend struct protobuf_trinity_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IMValue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:trinity.IMValue) */ {
 public:
  IMValue();
  virtual ~IMValue();

  IMValue(const IMValue& from);

  inline IMValue& operator=(const IMValue& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IMValue& default_instance();

  static inline const IMValue* internal_default_instance() {
    return reinterpret_cast<const IMValue*>(
               &_IMValue_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(IMValue* other);

  // implements Message ----------------------------------------------

  inline IMValue* New() const PROTOBUF_FINAL { return New(NULL); }

  IMValue* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IMValue& from);
  void MergeFrom(const IMValue& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IMValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .trinity.DocStat docs = 1;
  int docs_size() const;
  void clear_docs();
  static const int kDocsFieldNumber = 1;
  const ::trinity::DocStat& docs(int index) const;
  ::trinity::DocStat* mutable_docs(int index);
  ::trinity::DocStat* add_docs();
  ::google::protobuf::RepeatedPtrField< ::trinity::DocStat >*
      mutable_docs();
  const ::google::protobuf::RepeatedPtrField< ::trinity::DocStat >&
      docs() const;

  // @@protoc_insertion_point(class_scope:trinity.IMValue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::trinity::DocStat > docs_;
  mutable int _cached_size_;
  friend struct protobuf_trinity_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class InvertedMap : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:trinity.InvertedMap) */ {
 public:
  InvertedMap();
  virtual ~InvertedMap();

  InvertedMap(const InvertedMap& from);

  inline InvertedMap& operator=(const InvertedMap& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InvertedMap& default_instance();

  static inline const InvertedMap* internal_default_instance() {
    return reinterpret_cast<const InvertedMap*>(
               &_InvertedMap_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(InvertedMap* other);

  // implements Message ----------------------------------------------

  inline InvertedMap* New() const PROTOBUF_FINAL { return New(NULL); }

  InvertedMap* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InvertedMap& from);
  void MergeFrom(const InvertedMap& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InvertedMap* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .trinity.IMValue> the_map = 3;
  int the_map_size() const;
  void clear_the_map();
  static const int kTheMapFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::trinity::IMValue >&
      the_map() const;
  ::google::protobuf::Map< ::std::string, ::trinity::IMValue >*
      mutable_the_map();

  // string key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // uint32 iindex_api_version = 1;
  void clear_iindex_api_version();
  static const int kIindexApiVersionFieldNumber = 1;
  ::google::protobuf::uint32 iindex_api_version() const;
  void set_iindex_api_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:trinity.InvertedMap)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class InvertedMap_TheMapEntry : public ::google::protobuf::internal::MapEntry<InvertedMap_TheMapEntry, 
      ::std::string, ::trinity::IMValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<InvertedMap_TheMapEntry, 
      ::std::string, ::trinity::IMValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    InvertedMap_TheMapEntry();
    InvertedMap_TheMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const InvertedMap_TheMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_InvertedMap_TheMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  ::google::protobuf::internal::MapField<
      InvertedMap_TheMapEntry,
      ::std::string, ::trinity::IMValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > the_map_;
  private:
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::uint32 iindex_api_version_;
  mutable int _cached_size_;
  friend struct protobuf_trinity_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FMapRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:trinity.FMapRequest) */ {
 public:
  FMapRequest();
  virtual ~FMapRequest();

  FMapRequest(const FMapRequest& from);

  inline FMapRequest& operator=(const FMapRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FMapRequest& default_instance();

  static inline const FMapRequest* internal_default_instance() {
    return reinterpret_cast<const FMapRequest*>(
               &_FMapRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(FMapRequest* other);

  // implements Message ----------------------------------------------

  inline FMapRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  FMapRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FMapRequest& from);
  void MergeFrom(const FMapRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FMapRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string dockey = 1;
  void clear_dockey();
  static const int kDockeyFieldNumber = 1;
  const ::std::string& dockey() const;
  void set_dockey(const ::std::string& value);
  #if LANG_CXX11
  void set_dockey(::std::string&& value);
  #endif
  void set_dockey(const char* value);
  void set_dockey(const char* value, size_t size);
  ::std::string* mutable_dockey();
  ::std::string* release_dockey();
  void set_allocated_dockey(::std::string* dockey);

  // @@protoc_insertion_point(class_scope:trinity.FMapRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr dockey_;
  mutable int _cached_size_;
  friend struct protobuf_trinity_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IMapRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:trinity.IMapRequest) */ {
 public:
  IMapRequest();
  virtual ~IMapRequest();

  IMapRequest(const IMapRequest& from);

  inline IMapRequest& operator=(const IMapRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IMapRequest& default_instance();

  static inline const IMapRequest* internal_default_instance() {
    return reinterpret_cast<const IMapRequest*>(
               &_IMapRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(IMapRequest* other);

  // implements Message ----------------------------------------------

  inline IMapRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  IMapRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IMapRequest& from);
  void MergeFrom(const IMapRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IMapRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string termkey = 1;
  void clear_termkey();
  static const int kTermkeyFieldNumber = 1;
  const ::std::string& termkey() const;
  void set_termkey(const ::std::string& value);
  #if LANG_CXX11
  void set_termkey(::std::string&& value);
  #endif
  void set_termkey(const char* value);
  void set_termkey(const char* value, size_t size);
  ::std::string* mutable_termkey();
  ::std::string* release_termkey();
  void set_allocated_termkey(::std::string* termkey);

  // @@protoc_insertion_point(class_scope:trinity.IMapRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr termkey_;
  mutable int _cached_size_;
  friend struct protobuf_trinity_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StartSubsystemRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:trinity.StartSubsystemRequest) */ {
 public:
  StartSubsystemRequest();
  virtual ~StartSubsystemRequest();

  StartSubsystemRequest(const StartSubsystemRequest& from);

  inline StartSubsystemRequest& operator=(const StartSubsystemRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StartSubsystemRequest& default_instance();

  static inline const StartSubsystemRequest* internal_default_instance() {
    return reinterpret_cast<const StartSubsystemRequest*>(
               &_StartSubsystemRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(StartSubsystemRequest* other);

  // implements Message ----------------------------------------------

  inline StartSubsystemRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  StartSubsystemRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StartSubsystemRequest& from);
  void MergeFrom(const StartSubsystemRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StartSubsystemRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string subsystem_name = 1;
  void clear_subsystem_name();
  static const int kSubsystemNameFieldNumber = 1;
  const ::std::string& subsystem_name() const;
  void set_subsystem_name(const ::std::string& value);
  #if LANG_CXX11
  void set_subsystem_name(::std::string&& value);
  #endif
  void set_subsystem_name(const char* value);
  void set_subsystem_name(const char* value, size_t size);
  ::std::string* mutable_subsystem_name();
  ::std::string* release_subsystem_name();
  void set_allocated_subsystem_name(::std::string* subsystem_name);

  // @@protoc_insertion_point(class_scope:trinity.StartSubsystemRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr subsystem_name_;
  mutable int _cached_size_;
  friend struct protobuf_trinity_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StartSubsystemResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:trinity.StartSubsystemResponse) */ {
 public:
  StartSubsystemResponse();
  virtual ~StartSubsystemResponse();

  StartSubsystemResponse(const StartSubsystemResponse& from);

  inline StartSubsystemResponse& operator=(const StartSubsystemResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StartSubsystemResponse& default_instance();

  static inline const StartSubsystemResponse* internal_default_instance() {
    return reinterpret_cast<const StartSubsystemResponse*>(
               &_StartSubsystemResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(StartSubsystemResponse* other);

  // implements Message ----------------------------------------------

  inline StartSubsystemResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  StartSubsystemResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StartSubsystemResponse& from);
  void MergeFrom(const StartSubsystemResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StartSubsystemResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string response_code = 1;
  void clear_response_code();
  static const int kResponseCodeFieldNumber = 1;
  const ::std::string& response_code() const;
  void set_response_code(const ::std::string& value);
  #if LANG_CXX11
  void set_response_code(::std::string&& value);
  #endif
  void set_response_code(const char* value);
  void set_response_code(const char* value, size_t size);
  ::std::string* mutable_response_code();
  ::std::string* release_response_code();
  void set_allocated_response_code(::std::string* response_code);

  // @@protoc_insertion_point(class_scope:trinity.StartSubsystemResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr response_code_;
  mutable int _cached_size_;
  friend struct protobuf_trinity_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SearchRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:trinity.SearchRequest) */ {
 public:
  SearchRequest();
  virtual ~SearchRequest();

  SearchRequest(const SearchRequest& from);

  inline SearchRequest& operator=(const SearchRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchRequest& default_instance();

  static inline const SearchRequest* internal_default_instance() {
    return reinterpret_cast<const SearchRequest*>(
               &_SearchRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(SearchRequest* other);

  // implements Message ----------------------------------------------

  inline SearchRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SearchRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SearchRequest& from);
  void MergeFrom(const SearchRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SearchRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string query = 1;
  void clear_query();
  static const int kQueryFieldNumber = 1;
  const ::std::string& query() const;
  void set_query(const ::std::string& value);
  #if LANG_CXX11
  void set_query(::std::string&& value);
  #endif
  void set_query(const char* value);
  void set_query(const char* value, size_t size);
  ::std::string* mutable_query();
  ::std::string* release_query();
  void set_allocated_query(::std::string* query);

  // bytes id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const void* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:trinity.SearchRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr query_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  mutable int _cached_size_;
  friend struct protobuf_trinity_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SearchResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:trinity.SearchResponse) */ {
 public:
  SearchResponse();
  virtual ~SearchResponse();

  SearchResponse(const SearchResponse& from);

  inline SearchResponse& operator=(const SearchResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchResponse& default_instance();

  static inline const SearchResponse* internal_default_instance() {
    return reinterpret_cast<const SearchResponse*>(
               &_SearchResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(SearchResponse* other);

  // implements Message ----------------------------------------------

  inline SearchResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SearchResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SearchResponse& from);
  void MergeFrom(const SearchResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SearchResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .trinity.SearchResult results = 1;
  int results_size() const;
  void clear_results();
  static const int kResultsFieldNumber = 1;
  const ::trinity::SearchResult& results(int index) const;
  ::trinity::SearchResult* mutable_results(int index);
  ::trinity::SearchResult* add_results();
  ::google::protobuf::RepeatedPtrField< ::trinity::SearchResult >*
      mutable_results();
  const ::google::protobuf::RepeatedPtrField< ::trinity::SearchResult >&
      results() const;

  // @@protoc_insertion_point(class_scope:trinity.SearchResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::trinity::SearchResult > results_;
  mutable int _cached_size_;
  friend struct protobuf_trinity_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SearchResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:trinity.SearchResult) */ {
 public:
  SearchResult();
  virtual ~SearchResult();

  SearchResult(const SearchResult& from);

  inline SearchResult& operator=(const SearchResult& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchResult& default_instance();

  static inline const SearchResult* internal_default_instance() {
    return reinterpret_cast<const SearchResult*>(
               &_SearchResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(SearchResult* other);

  // implements Message ----------------------------------------------

  inline SearchResult* New() const PROTOBUF_FINAL { return New(NULL); }

  SearchResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SearchResult& from);
  void MergeFrom(const SearchResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SearchResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string title = 1;
  void clear_title();
  static const int kTitleFieldNumber = 1;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // string hash = 2;
  void clear_hash();
  static const int kHashFieldNumber = 2;
  const ::std::string& hash() const;
  void set_hash(const ::std::string& value);
  #if LANG_CXX11
  void set_hash(::std::string&& value);
  #endif
  void set_hash(const char* value);
  void set_hash(const char* value, size_t size);
  ::std::string* mutable_hash();
  ::std::string* release_hash();
  void set_allocated_hash(::std::string* hash);

  // string description = 3;
  void clear_description();
  static const int kDescriptionFieldNumber = 3;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // @@protoc_insertion_point(class_scope:trinity.SearchResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr hash_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  mutable int _cached_size_;
  friend struct protobuf_trinity_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RootConfig

// string NodeRole = 1;
inline void RootConfig::clear_noderole() {
  noderole_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RootConfig::noderole() const {
  // @@protoc_insertion_point(field_get:trinity.RootConfig.NodeRole)
  return noderole_.GetNoArena();
}
inline void RootConfig::set_noderole(const ::std::string& value) {
  
  noderole_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:trinity.RootConfig.NodeRole)
}
#if LANG_CXX11
inline void RootConfig::set_noderole(::std::string&& value) {
  
  noderole_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:trinity.RootConfig.NodeRole)
}
#endif
inline void RootConfig::set_noderole(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  noderole_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:trinity.RootConfig.NodeRole)
}
inline void RootConfig::set_noderole(const char* value, size_t size) {
  
  noderole_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:trinity.RootConfig.NodeRole)
}
inline ::std::string* RootConfig::mutable_noderole() {
  
  // @@protoc_insertion_point(field_mutable:trinity.RootConfig.NodeRole)
  return noderole_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RootConfig::release_noderole() {
  // @@protoc_insertion_point(field_release:trinity.RootConfig.NodeRole)
  
  return noderole_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RootConfig::set_allocated_noderole(::std::string* noderole) {
  if (noderole != NULL) {
    
  } else {
    
  }
  noderole_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), noderole);
  // @@protoc_insertion_point(field_set_allocated:trinity.RootConfig.NodeRole)
}

// .trinity.FIndexConfig FIndex = 2;
inline bool RootConfig::has_findex() const {
  return this != internal_default_instance() && findex_ != NULL;
}
inline void RootConfig::clear_findex() {
  if (GetArenaNoVirtual() == NULL && findex_ != NULL) delete findex_;
  findex_ = NULL;
}
inline const ::trinity::FIndexConfig& RootConfig::findex() const {
  // @@protoc_insertion_point(field_get:trinity.RootConfig.FIndex)
  return findex_ != NULL ? *findex_
                         : *::trinity::FIndexConfig::internal_default_instance();
}
inline ::trinity::FIndexConfig* RootConfig::mutable_findex() {
  
  if (findex_ == NULL) {
    findex_ = new ::trinity::FIndexConfig;
  }
  // @@protoc_insertion_point(field_mutable:trinity.RootConfig.FIndex)
  return findex_;
}
inline ::trinity::FIndexConfig* RootConfig::release_findex() {
  // @@protoc_insertion_point(field_release:trinity.RootConfig.FIndex)
  
  ::trinity::FIndexConfig* temp = findex_;
  findex_ = NULL;
  return temp;
}
inline void RootConfig::set_allocated_findex(::trinity::FIndexConfig* findex) {
  delete findex_;
  findex_ = findex;
  if (findex) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:trinity.RootConfig.FIndex)
}

// .trinity.IIndexConfig IIndex = 3;
inline bool RootConfig::has_iindex() const {
  return this != internal_default_instance() && iindex_ != NULL;
}
inline void RootConfig::clear_iindex() {
  if (GetArenaNoVirtual() == NULL && iindex_ != NULL) delete iindex_;
  iindex_ = NULL;
}
inline const ::trinity::IIndexConfig& RootConfig::iindex() const {
  // @@protoc_insertion_point(field_get:trinity.RootConfig.IIndex)
  return iindex_ != NULL ? *iindex_
                         : *::trinity::IIndexConfig::internal_default_instance();
}
inline ::trinity::IIndexConfig* RootConfig::mutable_iindex() {
  
  if (iindex_ == NULL) {
    iindex_ = new ::trinity::IIndexConfig;
  }
  // @@protoc_insertion_point(field_mutable:trinity.RootConfig.IIndex)
  return iindex_;
}
inline ::trinity::IIndexConfig* RootConfig::release_iindex() {
  // @@protoc_insertion_point(field_release:trinity.RootConfig.IIndex)
  
  ::trinity::IIndexConfig* temp = iindex_;
  iindex_ = NULL;
  return temp;
}
inline void RootConfig::set_allocated_iindex(::trinity::IIndexConfig* iindex) {
  delete iindex_;
  iindex_ = iindex;
  if (iindex) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:trinity.RootConfig.IIndex)
}

// string APIPort = 4;
inline void RootConfig::clear_apiport() {
  apiport_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RootConfig::apiport() const {
  // @@protoc_insertion_point(field_get:trinity.RootConfig.APIPort)
  return apiport_.GetNoArena();
}
inline void RootConfig::set_apiport(const ::std::string& value) {
  
  apiport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:trinity.RootConfig.APIPort)
}
#if LANG_CXX11
inline void RootConfig::set_apiport(::std::string&& value) {
  
  apiport_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:trinity.RootConfig.APIPort)
}
#endif
inline void RootConfig::set_apiport(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  apiport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:trinity.RootConfig.APIPort)
}
inline void RootConfig::set_apiport(const char* value, size_t size) {
  
  apiport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:trinity.RootConfig.APIPort)
}
inline ::std::string* RootConfig::mutable_apiport() {
  
  // @@protoc_insertion_point(field_mutable:trinity.RootConfig.APIPort)
  return apiport_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RootConfig::release_apiport() {
  // @@protoc_insertion_point(field_release:trinity.RootConfig.APIPort)
  
  return apiport_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RootConfig::set_allocated_apiport(::std::string* apiport) {
  if (apiport != NULL) {
    
  } else {
    
  }
  apiport_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), apiport);
  // @@protoc_insertion_point(field_set_allocated:trinity.RootConfig.APIPort)
}

// -------------------------------------------------------------------

// FIndexConfig

// uint32 max_size = 1;
inline void FIndexConfig::clear_max_size() {
  max_size_ = 0u;
}
inline ::google::protobuf::uint32 FIndexConfig::max_size() const {
  // @@protoc_insertion_point(field_get:trinity.FIndexConfig.max_size)
  return max_size_;
}
inline void FIndexConfig::set_max_size(::google::protobuf::uint32 value) {
  
  max_size_ = value;
  // @@protoc_insertion_point(field_set:trinity.FIndexConfig.max_size)
}

// string store_path = 2;
inline void FIndexConfig::clear_store_path() {
  store_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FIndexConfig::store_path() const {
  // @@protoc_insertion_point(field_get:trinity.FIndexConfig.store_path)
  return store_path_.GetNoArena();
}
inline void FIndexConfig::set_store_path(const ::std::string& value) {
  
  store_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:trinity.FIndexConfig.store_path)
}
#if LANG_CXX11
inline void FIndexConfig::set_store_path(::std::string&& value) {
  
  store_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:trinity.FIndexConfig.store_path)
}
#endif
inline void FIndexConfig::set_store_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  store_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:trinity.FIndexConfig.store_path)
}
inline void FIndexConfig::set_store_path(const char* value, size_t size) {
  
  store_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:trinity.FIndexConfig.store_path)
}
inline ::std::string* FIndexConfig::mutable_store_path() {
  
  // @@protoc_insertion_point(field_mutable:trinity.FIndexConfig.store_path)
  return store_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FIndexConfig::release_store_path() {
  // @@protoc_insertion_point(field_release:trinity.FIndexConfig.store_path)
  
  return store_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FIndexConfig::set_allocated_store_path(::std::string* store_path) {
  if (store_path != NULL) {
    
  } else {
    
  }
  store_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), store_path);
  // @@protoc_insertion_point(field_set_allocated:trinity.FIndexConfig.store_path)
}

// -------------------------------------------------------------------

// IIndexConfig

// uint32 max_size = 1;
inline void IIndexConfig::clear_max_size() {
  max_size_ = 0u;
}
inline ::google::protobuf::uint32 IIndexConfig::max_size() const {
  // @@protoc_insertion_point(field_get:trinity.IIndexConfig.max_size)
  return max_size_;
}
inline void IIndexConfig::set_max_size(::google::protobuf::uint32 value) {
  
  max_size_ = value;
  // @@protoc_insertion_point(field_set:trinity.IIndexConfig.max_size)
}

// string store_path = 2;
inline void IIndexConfig::clear_store_path() {
  store_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IIndexConfig::store_path() const {
  // @@protoc_insertion_point(field_get:trinity.IIndexConfig.store_path)
  return store_path_.GetNoArena();
}
inline void IIndexConfig::set_store_path(const ::std::string& value) {
  
  store_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:trinity.IIndexConfig.store_path)
}
#if LANG_CXX11
inline void IIndexConfig::set_store_path(::std::string&& value) {
  
  store_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:trinity.IIndexConfig.store_path)
}
#endif
inline void IIndexConfig::set_store_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  store_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:trinity.IIndexConfig.store_path)
}
inline void IIndexConfig::set_store_path(const char* value, size_t size) {
  
  store_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:trinity.IIndexConfig.store_path)
}
inline ::std::string* IIndexConfig::mutable_store_path() {
  
  // @@protoc_insertion_point(field_mutable:trinity.IIndexConfig.store_path)
  return store_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IIndexConfig::release_store_path() {
  // @@protoc_insertion_point(field_release:trinity.IIndexConfig.store_path)
  
  return store_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IIndexConfig::set_allocated_store_path(::std::string* store_path) {
  if (store_path != NULL) {
    
  } else {
    
  }
  store_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), store_path);
  // @@protoc_insertion_point(field_set_allocated:trinity.IIndexConfig.store_path)
}

// -------------------------------------------------------------------

// ConfigRequest

// string type = 1;
inline void ConfigRequest::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfigRequest::type() const {
  // @@protoc_insertion_point(field_get:trinity.ConfigRequest.type)
  return type_.GetNoArena();
}
inline void ConfigRequest::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:trinity.ConfigRequest.type)
}
#if LANG_CXX11
inline void ConfigRequest::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:trinity.ConfigRequest.type)
}
#endif
inline void ConfigRequest::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:trinity.ConfigRequest.type)
}
inline void ConfigRequest::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:trinity.ConfigRequest.type)
}
inline ::std::string* ConfigRequest::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:trinity.ConfigRequest.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigRequest::release_type() {
  // @@protoc_insertion_point(field_release:trinity.ConfigRequest.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigRequest::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:trinity.ConfigRequest.type)
}

// -------------------------------------------------------------------

// SetResult

// bool success = 1;
inline void SetResult::clear_success() {
  success_ = false;
}
inline bool SetResult::success() const {
  // @@protoc_insertion_point(field_get:trinity.SetResult.success)
  return success_;
}
inline void SetResult::set_success(bool value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:trinity.SetResult.success)
}

// -------------------------------------------------------------------

// FMValue

// repeated uint32 locations = 1;
inline int FMValue::locations_size() const {
  return locations_.size();
}
inline void FMValue::clear_locations() {
  locations_.Clear();
}
inline ::google::protobuf::uint32 FMValue::locations(int index) const {
  // @@protoc_insertion_point(field_get:trinity.FMValue.locations)
  return locations_.Get(index);
}
inline void FMValue::set_locations(int index, ::google::protobuf::uint32 value) {
  locations_.Set(index, value);
  // @@protoc_insertion_point(field_set:trinity.FMValue.locations)
}
inline void FMValue::add_locations(::google::protobuf::uint32 value) {
  locations_.Add(value);
  // @@protoc_insertion_point(field_add:trinity.FMValue.locations)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
FMValue::locations() const {
  // @@protoc_insertion_point(field_list:trinity.FMValue.locations)
  return locations_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
FMValue::mutable_locations() {
  // @@protoc_insertion_point(field_mutable_list:trinity.FMValue.locations)
  return &locations_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ForwardMap

// uint32 findex_api_version = 1;
inline void ForwardMap::clear_findex_api_version() {
  findex_api_version_ = 0u;
}
inline ::google::protobuf::uint32 ForwardMap::findex_api_version() const {
  // @@protoc_insertion_point(field_get:trinity.ForwardMap.findex_api_version)
  return findex_api_version_;
}
inline void ForwardMap::set_findex_api_version(::google::protobuf::uint32 value) {
  
  findex_api_version_ = value;
  // @@protoc_insertion_point(field_set:trinity.ForwardMap.findex_api_version)
}

// string key = 2;
inline void ForwardMap::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ForwardMap::key() const {
  // @@protoc_insertion_point(field_get:trinity.ForwardMap.key)
  return key_.GetNoArena();
}
inline void ForwardMap::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:trinity.ForwardMap.key)
}
#if LANG_CXX11
inline void ForwardMap::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:trinity.ForwardMap.key)
}
#endif
inline void ForwardMap::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:trinity.ForwardMap.key)
}
inline void ForwardMap::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:trinity.ForwardMap.key)
}
inline ::std::string* ForwardMap::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:trinity.ForwardMap.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ForwardMap::release_key() {
  // @@protoc_insertion_point(field_release:trinity.ForwardMap.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ForwardMap::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:trinity.ForwardMap.key)
}

// map<string, .trinity.FMValue> the_map = 3;
inline int ForwardMap::the_map_size() const {
  return the_map_.size();
}
inline void ForwardMap::clear_the_map() {
  the_map_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::trinity::FMValue >&
ForwardMap::the_map() const {
  // @@protoc_insertion_point(field_map:trinity.ForwardMap.the_map)
  return the_map_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::trinity::FMValue >*
ForwardMap::mutable_the_map() {
  // @@protoc_insertion_point(field_mutable_map:trinity.ForwardMap.the_map)
  return the_map_.MutableMap();
}

// -------------------------------------------------------------------

// DocStat

// string docname = 1;
inline void DocStat::clear_docname() {
  docname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DocStat::docname() const {
  // @@protoc_insertion_point(field_get:trinity.DocStat.docname)
  return docname_.GetNoArena();
}
inline void DocStat::set_docname(const ::std::string& value) {
  
  docname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:trinity.DocStat.docname)
}
#if LANG_CXX11
inline void DocStat::set_docname(::std::string&& value) {
  
  docname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:trinity.DocStat.docname)
}
#endif
inline void DocStat::set_docname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  docname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:trinity.DocStat.docname)
}
inline void DocStat::set_docname(const char* value, size_t size) {
  
  docname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:trinity.DocStat.docname)
}
inline ::std::string* DocStat::mutable_docname() {
  
  // @@protoc_insertion_point(field_mutable:trinity.DocStat.docname)
  return docname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DocStat::release_docname() {
  // @@protoc_insertion_point(field_release:trinity.DocStat.docname)
  
  return docname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DocStat::set_allocated_docname(::std::string* docname) {
  if (docname != NULL) {
    
  } else {
    
  }
  docname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), docname);
  // @@protoc_insertion_point(field_set_allocated:trinity.DocStat.docname)
}

// uint32 count = 2;
inline void DocStat::clear_count() {
  count_ = 0u;
}
inline ::google::protobuf::uint32 DocStat::count() const {
  // @@protoc_insertion_point(field_get:trinity.DocStat.count)
  return count_;
}
inline void DocStat::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:trinity.DocStat.count)
}

// -------------------------------------------------------------------

// IMValue

// repeated .trinity.DocStat docs = 1;
inline int IMValue::docs_size() const {
  return docs_.size();
}
inline void IMValue::clear_docs() {
  docs_.Clear();
}
inline const ::trinity::DocStat& IMValue::docs(int index) const {
  // @@protoc_insertion_point(field_get:trinity.IMValue.docs)
  return docs_.Get(index);
}
inline ::trinity::DocStat* IMValue::mutable_docs(int index) {
  // @@protoc_insertion_point(field_mutable:trinity.IMValue.docs)
  return docs_.Mutable(index);
}
inline ::trinity::DocStat* IMValue::add_docs() {
  // @@protoc_insertion_point(field_add:trinity.IMValue.docs)
  return docs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::trinity::DocStat >*
IMValue::mutable_docs() {
  // @@protoc_insertion_point(field_mutable_list:trinity.IMValue.docs)
  return &docs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::trinity::DocStat >&
IMValue::docs() const {
  // @@protoc_insertion_point(field_list:trinity.IMValue.docs)
  return docs_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// InvertedMap

// uint32 iindex_api_version = 1;
inline void InvertedMap::clear_iindex_api_version() {
  iindex_api_version_ = 0u;
}
inline ::google::protobuf::uint32 InvertedMap::iindex_api_version() const {
  // @@protoc_insertion_point(field_get:trinity.InvertedMap.iindex_api_version)
  return iindex_api_version_;
}
inline void InvertedMap::set_iindex_api_version(::google::protobuf::uint32 value) {
  
  iindex_api_version_ = value;
  // @@protoc_insertion_point(field_set:trinity.InvertedMap.iindex_api_version)
}

// string key = 2;
inline void InvertedMap::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InvertedMap::key() const {
  // @@protoc_insertion_point(field_get:trinity.InvertedMap.key)
  return key_.GetNoArena();
}
inline void InvertedMap::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:trinity.InvertedMap.key)
}
#if LANG_CXX11
inline void InvertedMap::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:trinity.InvertedMap.key)
}
#endif
inline void InvertedMap::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:trinity.InvertedMap.key)
}
inline void InvertedMap::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:trinity.InvertedMap.key)
}
inline ::std::string* InvertedMap::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:trinity.InvertedMap.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InvertedMap::release_key() {
  // @@protoc_insertion_point(field_release:trinity.InvertedMap.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InvertedMap::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:trinity.InvertedMap.key)
}

// map<string, .trinity.IMValue> the_map = 3;
inline int InvertedMap::the_map_size() const {
  return the_map_.size();
}
inline void InvertedMap::clear_the_map() {
  the_map_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::trinity::IMValue >&
InvertedMap::the_map() const {
  // @@protoc_insertion_point(field_map:trinity.InvertedMap.the_map)
  return the_map_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::trinity::IMValue >*
InvertedMap::mutable_the_map() {
  // @@protoc_insertion_point(field_mutable_map:trinity.InvertedMap.the_map)
  return the_map_.MutableMap();
}

// -------------------------------------------------------------------

// FMapRequest

// string dockey = 1;
inline void FMapRequest::clear_dockey() {
  dockey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FMapRequest::dockey() const {
  // @@protoc_insertion_point(field_get:trinity.FMapRequest.dockey)
  return dockey_.GetNoArena();
}
inline void FMapRequest::set_dockey(const ::std::string& value) {
  
  dockey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:trinity.FMapRequest.dockey)
}
#if LANG_CXX11
inline void FMapRequest::set_dockey(::std::string&& value) {
  
  dockey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:trinity.FMapRequest.dockey)
}
#endif
inline void FMapRequest::set_dockey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dockey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:trinity.FMapRequest.dockey)
}
inline void FMapRequest::set_dockey(const char* value, size_t size) {
  
  dockey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:trinity.FMapRequest.dockey)
}
inline ::std::string* FMapRequest::mutable_dockey() {
  
  // @@protoc_insertion_point(field_mutable:trinity.FMapRequest.dockey)
  return dockey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FMapRequest::release_dockey() {
  // @@protoc_insertion_point(field_release:trinity.FMapRequest.dockey)
  
  return dockey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FMapRequest::set_allocated_dockey(::std::string* dockey) {
  if (dockey != NULL) {
    
  } else {
    
  }
  dockey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dockey);
  // @@protoc_insertion_point(field_set_allocated:trinity.FMapRequest.dockey)
}

// -------------------------------------------------------------------

// IMapRequest

// string termkey = 1;
inline void IMapRequest::clear_termkey() {
  termkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IMapRequest::termkey() const {
  // @@protoc_insertion_point(field_get:trinity.IMapRequest.termkey)
  return termkey_.GetNoArena();
}
inline void IMapRequest::set_termkey(const ::std::string& value) {
  
  termkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:trinity.IMapRequest.termkey)
}
#if LANG_CXX11
inline void IMapRequest::set_termkey(::std::string&& value) {
  
  termkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:trinity.IMapRequest.termkey)
}
#endif
inline void IMapRequest::set_termkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  termkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:trinity.IMapRequest.termkey)
}
inline void IMapRequest::set_termkey(const char* value, size_t size) {
  
  termkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:trinity.IMapRequest.termkey)
}
inline ::std::string* IMapRequest::mutable_termkey() {
  
  // @@protoc_insertion_point(field_mutable:trinity.IMapRequest.termkey)
  return termkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IMapRequest::release_termkey() {
  // @@protoc_insertion_point(field_release:trinity.IMapRequest.termkey)
  
  return termkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IMapRequest::set_allocated_termkey(::std::string* termkey) {
  if (termkey != NULL) {
    
  } else {
    
  }
  termkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), termkey);
  // @@protoc_insertion_point(field_set_allocated:trinity.IMapRequest.termkey)
}

// -------------------------------------------------------------------

// StartSubsystemRequest

// string subsystem_name = 1;
inline void StartSubsystemRequest::clear_subsystem_name() {
  subsystem_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StartSubsystemRequest::subsystem_name() const {
  // @@protoc_insertion_point(field_get:trinity.StartSubsystemRequest.subsystem_name)
  return subsystem_name_.GetNoArena();
}
inline void StartSubsystemRequest::set_subsystem_name(const ::std::string& value) {
  
  subsystem_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:trinity.StartSubsystemRequest.subsystem_name)
}
#if LANG_CXX11
inline void StartSubsystemRequest::set_subsystem_name(::std::string&& value) {
  
  subsystem_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:trinity.StartSubsystemRequest.subsystem_name)
}
#endif
inline void StartSubsystemRequest::set_subsystem_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  subsystem_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:trinity.StartSubsystemRequest.subsystem_name)
}
inline void StartSubsystemRequest::set_subsystem_name(const char* value, size_t size) {
  
  subsystem_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:trinity.StartSubsystemRequest.subsystem_name)
}
inline ::std::string* StartSubsystemRequest::mutable_subsystem_name() {
  
  // @@protoc_insertion_point(field_mutable:trinity.StartSubsystemRequest.subsystem_name)
  return subsystem_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StartSubsystemRequest::release_subsystem_name() {
  // @@protoc_insertion_point(field_release:trinity.StartSubsystemRequest.subsystem_name)
  
  return subsystem_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartSubsystemRequest::set_allocated_subsystem_name(::std::string* subsystem_name) {
  if (subsystem_name != NULL) {
    
  } else {
    
  }
  subsystem_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), subsystem_name);
  // @@protoc_insertion_point(field_set_allocated:trinity.StartSubsystemRequest.subsystem_name)
}

// -------------------------------------------------------------------

// StartSubsystemResponse

// string response_code = 1;
inline void StartSubsystemResponse::clear_response_code() {
  response_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StartSubsystemResponse::response_code() const {
  // @@protoc_insertion_point(field_get:trinity.StartSubsystemResponse.response_code)
  return response_code_.GetNoArena();
}
inline void StartSubsystemResponse::set_response_code(const ::std::string& value) {
  
  response_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:trinity.StartSubsystemResponse.response_code)
}
#if LANG_CXX11
inline void StartSubsystemResponse::set_response_code(::std::string&& value) {
  
  response_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:trinity.StartSubsystemResponse.response_code)
}
#endif
inline void StartSubsystemResponse::set_response_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  response_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:trinity.StartSubsystemResponse.response_code)
}
inline void StartSubsystemResponse::set_response_code(const char* value, size_t size) {
  
  response_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:trinity.StartSubsystemResponse.response_code)
}
inline ::std::string* StartSubsystemResponse::mutable_response_code() {
  
  // @@protoc_insertion_point(field_mutable:trinity.StartSubsystemResponse.response_code)
  return response_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StartSubsystemResponse::release_response_code() {
  // @@protoc_insertion_point(field_release:trinity.StartSubsystemResponse.response_code)
  
  return response_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartSubsystemResponse::set_allocated_response_code(::std::string* response_code) {
  if (response_code != NULL) {
    
  } else {
    
  }
  response_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), response_code);
  // @@protoc_insertion_point(field_set_allocated:trinity.StartSubsystemResponse.response_code)
}

// -------------------------------------------------------------------

// SearchRequest

// string query = 1;
inline void SearchRequest::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SearchRequest::query() const {
  // @@protoc_insertion_point(field_get:trinity.SearchRequest.query)
  return query_.GetNoArena();
}
inline void SearchRequest::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:trinity.SearchRequest.query)
}
#if LANG_CXX11
inline void SearchRequest::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:trinity.SearchRequest.query)
}
#endif
inline void SearchRequest::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:trinity.SearchRequest.query)
}
inline void SearchRequest::set_query(const char* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:trinity.SearchRequest.query)
}
inline ::std::string* SearchRequest::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:trinity.SearchRequest.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchRequest::release_query() {
  // @@protoc_insertion_point(field_release:trinity.SearchRequest.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchRequest::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:trinity.SearchRequest.query)
}

// bytes id = 2;
inline void SearchRequest::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SearchRequest::id() const {
  // @@protoc_insertion_point(field_get:trinity.SearchRequest.id)
  return id_.GetNoArena();
}
inline void SearchRequest::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:trinity.SearchRequest.id)
}
#if LANG_CXX11
inline void SearchRequest::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:trinity.SearchRequest.id)
}
#endif
inline void SearchRequest::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:trinity.SearchRequest.id)
}
inline void SearchRequest::set_id(const void* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:trinity.SearchRequest.id)
}
inline ::std::string* SearchRequest::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:trinity.SearchRequest.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchRequest::release_id() {
  // @@protoc_insertion_point(field_release:trinity.SearchRequest.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchRequest::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:trinity.SearchRequest.id)
}

// -------------------------------------------------------------------

// SearchResponse

// repeated .trinity.SearchResult results = 1;
inline int SearchResponse::results_size() const {
  return results_.size();
}
inline void SearchResponse::clear_results() {
  results_.Clear();
}
inline const ::trinity::SearchResult& SearchResponse::results(int index) const {
  // @@protoc_insertion_point(field_get:trinity.SearchResponse.results)
  return results_.Get(index);
}
inline ::trinity::SearchResult* SearchResponse::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:trinity.SearchResponse.results)
  return results_.Mutable(index);
}
inline ::trinity::SearchResult* SearchResponse::add_results() {
  // @@protoc_insertion_point(field_add:trinity.SearchResponse.results)
  return results_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::trinity::SearchResult >*
SearchResponse::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:trinity.SearchResponse.results)
  return &results_;
}
inline const ::google::protobuf::RepeatedPtrField< ::trinity::SearchResult >&
SearchResponse::results() const {
  // @@protoc_insertion_point(field_list:trinity.SearchResponse.results)
  return results_;
}

// -------------------------------------------------------------------

// SearchResult

// string title = 1;
inline void SearchResult::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SearchResult::title() const {
  // @@protoc_insertion_point(field_get:trinity.SearchResult.title)
  return title_.GetNoArena();
}
inline void SearchResult::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:trinity.SearchResult.title)
}
#if LANG_CXX11
inline void SearchResult::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:trinity.SearchResult.title)
}
#endif
inline void SearchResult::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:trinity.SearchResult.title)
}
inline void SearchResult::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:trinity.SearchResult.title)
}
inline ::std::string* SearchResult::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:trinity.SearchResult.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchResult::release_title() {
  // @@protoc_insertion_point(field_release:trinity.SearchResult.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchResult::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:trinity.SearchResult.title)
}

// string hash = 2;
inline void SearchResult::clear_hash() {
  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SearchResult::hash() const {
  // @@protoc_insertion_point(field_get:trinity.SearchResult.hash)
  return hash_.GetNoArena();
}
inline void SearchResult::set_hash(const ::std::string& value) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:trinity.SearchResult.hash)
}
#if LANG_CXX11
inline void SearchResult::set_hash(::std::string&& value) {
  
  hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:trinity.SearchResult.hash)
}
#endif
inline void SearchResult::set_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:trinity.SearchResult.hash)
}
inline void SearchResult::set_hash(const char* value, size_t size) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:trinity.SearchResult.hash)
}
inline ::std::string* SearchResult::mutable_hash() {
  
  // @@protoc_insertion_point(field_mutable:trinity.SearchResult.hash)
  return hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchResult::release_hash() {
  // @@protoc_insertion_point(field_release:trinity.SearchResult.hash)
  
  return hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchResult::set_allocated_hash(::std::string* hash) {
  if (hash != NULL) {
    
  } else {
    
  }
  hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hash);
  // @@protoc_insertion_point(field_set_allocated:trinity.SearchResult.hash)
}

// string description = 3;
inline void SearchResult::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SearchResult::description() const {
  // @@protoc_insertion_point(field_get:trinity.SearchResult.description)
  return description_.GetNoArena();
}
inline void SearchResult::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:trinity.SearchResult.description)
}
#if LANG_CXX11
inline void SearchResult::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:trinity.SearchResult.description)
}
#endif
inline void SearchResult::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:trinity.SearchResult.description)
}
inline void SearchResult::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:trinity.SearchResult.description)
}
inline ::std::string* SearchResult::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:trinity.SearchResult.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchResult::release_description() {
  // @@protoc_insertion_point(field_release:trinity.SearchResult.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchResult::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:trinity.SearchResult.description)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace trinity

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_trinity_2eproto__INCLUDED
